// Copyright 2022 The Happy Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package vars

const (
	unicodeMaxLatin1 = '\u00FF' // maximum Latin-1 value.

	// linearMax is the maximum size table for linear search for non-Latin1 rune.
	// Derived by running 'go test -calibrate'.
	unicodeLinearMax = 18
)

var (
	// unicodeWhiteSpace is the set of Unicode characters with property WhiteSpace.
	unicodeWhiteSpace = &unicodeRangeTable{
		R16: []unicodeRange16{
			{0x0009, 0x000d, 1},
			{0x0020, 0x0085, 101},
			{0x00a0, 0x1680, 5600},
			{0x2000, 0x200a, 1},
			{0x2028, 0x2029, 1},
			{0x202f, 0x205f, 48},
			{0x3000, 0x3000, 1},
		},
		LatinOffset: 2,
	}
)

// unicodeRangeTable defines a set of Unicode code points by listing the ranges of
// code points within the set. The ranges are listed in two slices
// to save space: a slice of 16-bit ranges and a slice of 32-bit ranges.
// The two slices must be in sorted order and non-overlapping.
// Also, R32 should contain only values >= 0x10000 (1<<16).
type unicodeRangeTable struct {
	R16         []unicodeRange16
	R32         []unicodeRange32
	LatinOffset int // number of entries in R16 with Hi <= MaxLatin1
}

// Range16 represents of a range of 16-bit Unicode code points. The range runs from Lo to Hi
// inclusive and has the specified stride.
type unicodeRange16 struct {
	Lo     uint16
	Hi     uint16
	Stride uint16
}

// Range32 represents of a range of Unicode code points and is used when one or
// more of the values will not fit in 16 bits. The range runs from Lo to Hi
// inclusive and has the specified stride. Lo and Hi must always be >= 1<<16.
type unicodeRange32 struct {
	Lo     uint32
	Hi     uint32
	Stride uint32
}

func unicodeIsExcludingLatin(rangeTab *unicodeRangeTable, r rune) bool {
	r16 := rangeTab.R16
	// Compare as uint32 to correctly handle negative runes.
	if off := rangeTab.LatinOffset; len(r16) > off && uint32(r) <= uint32(r16[len(r16)-1].Hi) {
		return unicodeIs16(r16[off:], uint16(r))
	}
	r32 := rangeTab.R32
	if len(r32) > 0 && r >= rune(r32[0].Lo) {
		return unicodeIs32(r32, uint32(r))
	}
	return false
}

// is16 reports whether r is in the sorted slice of 16-bit ranges.
func unicodeIs16(ranges []unicodeRange16, r uint16) bool {
	if len(ranges) <= unicodeLinearMax || r <= unicodeMaxLatin1 {
		for i := range ranges {
			range_ := &ranges[i]
			if r < range_.Lo {
				return false
			}
			if r <= range_.Hi {
				return range_.Stride == 1 || (r-range_.Lo)%range_.Stride == 0
			}
		}
		return false
	}

	// binary search over ranges
	lo := 0
	hi := len(ranges)
	for lo < hi {
		m := lo + (hi-lo)/2
		range_ := &ranges[m]
		if range_.Lo <= r && r <= range_.Hi {
			return range_.Stride == 1 || (r-range_.Lo)%range_.Stride == 0
		}
		if r < range_.Lo {
			hi = m
		} else {
			lo = m + 1
		}
	}
	return false
}

// is32 reports whether r is in the sorted slice of 32-bit ranges.
func unicodeIs32(ranges []unicodeRange32, r uint32) bool {
	if len(ranges) <= unicodeLinearMax {
		for i := range ranges {
			range_ := &ranges[i]
			if r < range_.Lo {
				return false
			}
			if r <= range_.Hi {
				return range_.Stride == 1 || (r-range_.Lo)%range_.Stride == 0
			}
		}
		return false
	}

	// binary search over ranges
	lo := 0
	hi := len(ranges)
	for lo < hi {
		m := lo + (hi-lo)/2
		range_ := ranges[m]
		if range_.Lo <= r && r <= range_.Hi {
			return range_.Stride == 1 || (r-range_.Lo)%range_.Stride == 0
		}
		if r < range_.Lo {
			hi = m
		} else {
			lo = m + 1
		}
	}
	return false
}

// In reports whether the rune is a member of one of the ranges.
func unicodeIn(r rune, ranges ...*unicodeRangeTable) bool {
	for _, inside := range ranges {
		if unicodeIs(inside, r) {
			return true
		}
	}
	return false
}

// Is reports whether the rune is in the specified table of ranges.
func unicodeIs(rangeTab *unicodeRangeTable, r rune) bool {
	r16 := rangeTab.R16
	// Compare as uint32 to correctly handle negative runes.
	if len(r16) > 0 && uint32(r) <= uint32(r16[len(r16)-1].Hi) {
		return unicodeIs16(r16, uint16(r))
	}
	r32 := rangeTab.R32
	if len(r32) > 0 && r >= rune(r32[0].Lo) {
		return unicodeIs32(r32, uint32(r))
	}
	return false
}

// IsSpace reports whether the rune is a space character as defined
// by Unicode's White Space property; in the Latin-1 space
// this is
//
//	'\t', '\n', '\v', '\f', '\r', ' ', U+0085 (NEL), U+00A0 (NBSP).
//
// Other definitions of spacing characters are set by category
// Z and property Pattern_White_Space.
func unicodeIsSpace(r rune) bool {
	// This property isn't the same as Z; special-case it.
	if uint32(r) <= unicodeMaxLatin1 {
		switch r {
		case '\t', '\n', '\v', '\f', '\r', ' ', 0x85, 0xA0:
			return true
		}
		return false
	}
	return unicodeIsExcludingLatin(unicodeWhiteSpace, r)
}

// IsControl reports whether the rune is a control character.
// The C (Other) Unicode category includes more code points
// such as surrogates; use Is(C, r) to test for them.
func unicodeIsControl(r rune) bool {
	if uint32(r) <= unicodeMaxLatin1 {
		return properties[uint8(r)]&pC != 0
	}
	// All control characters are < MaxLatin1.
	return false
}

// PrintRanges defines the set of printable characters according to Go.
// ASCII space, U+0020, is handled separately.
var unicodePrintRanges = []*unicodeRangeTable{
	L, M, N, P, S,
}

// IsPrint reports whether the rune is defined as printable by Go. Such
// characters include letters, marks, numbers, punctuation, symbols, and the
// ASCII space character, from categories L, M, N, P, S and the ASCII space
// character. This categorization is the same as IsGraphic except that the
// only spacing character is ASCII space, U+0020.
func unicodeIsPrint(r rune) bool {
	if uint32(r) <= unicodeMaxLatin1 {
		return properties[uint8(r)]&pp != 0
	}
	return unicodeIn(r, unicodePrintRanges...)
}

// Bit masks for each code point under U+0100, for fast lookup.
const (
	pC     = 1 << iota // a control character.
	pP                 // a punctuation character.
	pN                 // a numeral.
	pS                 // a symbolic character.
	pZ                 // a spacing character.
	pLu                // an upper-case letter.
	pLl                // a lower-case letter.
	pp                 // a printable character according to Go's definition.
	pg     = pp | pZ   // a graphical character according to the Unicode definition.
	pLo    = pLl | pLu // a letter that is neither upper nor lower case.
	pLmask = pLo
)

var (
	Letter = _L // Letter/L is the set of Unicode letters, category L.
	L      = _L
	Mark   = _M // Mark/M is the set of Unicode mark characters, category M.
	M      = _M
	Number = _N // Number/N is the set of Unicode number characters, category N.
	N      = _N
	Punct  = _P // Punct/P is the set of Unicode punctuation characters, category P.
	P      = _P
	Symbol = _S // Symbol/S is the set of Unicode symbol characters, category S.
	S      = _S
)

var properties = [unicodeMaxLatin1 + 1]uint8{
	0x00: pC,       // '\x00'
	0x01: pC,       // '\x01'
	0x02: pC,       // '\x02'
	0x03: pC,       // '\x03'
	0x04: pC,       // '\x04'
	0x05: pC,       // '\x05'
	0x06: pC,       // '\x06'
	0x07: pC,       // '\a'
	0x08: pC,       // '\b'
	0x09: pC,       // '\t'
	0x0A: pC,       // '\n'
	0x0B: pC,       // '\v'
	0x0C: pC,       // '\f'
	0x0D: pC,       // '\r'
	0x0E: pC,       // '\x0e'
	0x0F: pC,       // '\x0f'
	0x10: pC,       // '\x10'
	0x11: pC,       // '\x11'
	0x12: pC,       // '\x12'
	0x13: pC,       // '\x13'
	0x14: pC,       // '\x14'
	0x15: pC,       // '\x15'
	0x16: pC,       // '\x16'
	0x17: pC,       // '\x17'
	0x18: pC,       // '\x18'
	0x19: pC,       // '\x19'
	0x1A: pC,       // '\x1a'
	0x1B: pC,       // '\x1b'
	0x1C: pC,       // '\x1c'
	0x1D: pC,       // '\x1d'
	0x1E: pC,       // '\x1e'
	0x1F: pC,       // '\x1f'
	0x20: pZ | pp,  // ' '
	0x21: pP | pp,  // '!'
	0x22: pP | pp,  // '"'
	0x23: pP | pp,  // '#'
	0x24: pS | pp,  // '$'
	0x25: pP | pp,  // '%'
	0x26: pP | pp,  // '&'
	0x27: pP | pp,  // '\''
	0x28: pP | pp,  // '('
	0x29: pP | pp,  // ')'
	0x2A: pP | pp,  // '*'
	0x2B: pS | pp,  // '+'
	0x2C: pP | pp,  // ','
	0x2D: pP | pp,  // '-'
	0x2E: pP | pp,  // '.'
	0x2F: pP | pp,  // '/'
	0x30: pN | pp,  // '0'
	0x31: pN | pp,  // '1'
	0x32: pN | pp,  // '2'
	0x33: pN | pp,  // '3'
	0x34: pN | pp,  // '4'
	0x35: pN | pp,  // '5'
	0x36: pN | pp,  // '6'
	0x37: pN | pp,  // '7'
	0x38: pN | pp,  // '8'
	0x39: pN | pp,  // '9'
	0x3A: pP | pp,  // ':'
	0x3B: pP | pp,  // ';'
	0x3C: pS | pp,  // '<'
	0x3D: pS | pp,  // '='
	0x3E: pS | pp,  // '>'
	0x3F: pP | pp,  // '?'
	0x40: pP | pp,  // '@'
	0x41: pLu | pp, // 'A'
	0x42: pLu | pp, // 'B'
	0x43: pLu | pp, // 'C'
	0x44: pLu | pp, // 'D'
	0x45: pLu | pp, // 'E'
	0x46: pLu | pp, // 'F'
	0x47: pLu | pp, // 'G'
	0x48: pLu | pp, // 'H'
	0x49: pLu | pp, // 'I'
	0x4A: pLu | pp, // 'J'
	0x4B: pLu | pp, // 'K'
	0x4C: pLu | pp, // 'L'
	0x4D: pLu | pp, // 'M'
	0x4E: pLu | pp, // 'N'
	0x4F: pLu | pp, // 'O'
	0x50: pLu | pp, // 'P'
	0x51: pLu | pp, // 'Q'
	0x52: pLu | pp, // 'R'
	0x53: pLu | pp, // 'S'
	0x54: pLu | pp, // 'T'
	0x55: pLu | pp, // 'U'
	0x56: pLu | pp, // 'V'
	0x57: pLu | pp, // 'W'
	0x58: pLu | pp, // 'X'
	0x59: pLu | pp, // 'Y'
	0x5A: pLu | pp, // 'Z'
	0x5B: pP | pp,  // '['
	0x5C: pP | pp,  // '\\'
	0x5D: pP | pp,  // ']'
	0x5E: pS | pp,  // '^'
	0x5F: pP | pp,  // '_'
	0x60: pS | pp,  // '`'
	0x61: pLl | pp, // 'a'
	0x62: pLl | pp, // 'b'
	0x63: pLl | pp, // 'c'
	0x64: pLl | pp, // 'd'
	0x65: pLl | pp, // 'e'
	0x66: pLl | pp, // 'f'
	0x67: pLl | pp, // 'g'
	0x68: pLl | pp, // 'h'
	0x69: pLl | pp, // 'i'
	0x6A: pLl | pp, // 'j'
	0x6B: pLl | pp, // 'k'
	0x6C: pLl | pp, // 'l'
	0x6D: pLl | pp, // 'm'
	0x6E: pLl | pp, // 'n'
	0x6F: pLl | pp, // 'o'
	0x70: pLl | pp, // 'p'
	0x71: pLl | pp, // 'q'
	0x72: pLl | pp, // 'r'
	0x73: pLl | pp, // 's'
	0x74: pLl | pp, // 't'
	0x75: pLl | pp, // 'u'
	0x76: pLl | pp, // 'v'
	0x77: pLl | pp, // 'w'
	0x78: pLl | pp, // 'x'
	0x79: pLl | pp, // 'y'
	0x7A: pLl | pp, // 'z'
	0x7B: pP | pp,  // '{'
	0x7C: pS | pp,  // '|'
	0x7D: pP | pp,  // '}'
	0x7E: pS | pp,  // '~'
	0x7F: pC,       // '\u007f'
	0x80: pC,       // '\u0080'
	0x81: pC,       // '\u0081'
	0x82: pC,       // '\u0082'
	0x83: pC,       // '\u0083'
	0x84: pC,       // '\u0084'
	0x85: pC,       // '\u0085'
	0x86: pC,       // '\u0086'
	0x87: pC,       // '\u0087'
	0x88: pC,       // '\u0088'
	0x89: pC,       // '\u0089'
	0x8A: pC,       // '\u008a'
	0x8B: pC,       // '\u008b'
	0x8C: pC,       // '\u008c'
	0x8D: pC,       // '\u008d'
	0x8E: pC,       // '\u008e'
	0x8F: pC,       // '\u008f'
	0x90: pC,       // '\u0090'
	0x91: pC,       // '\u0091'
	0x92: pC,       // '\u0092'
	0x93: pC,       // '\u0093'
	0x94: pC,       // '\u0094'
	0x95: pC,       // '\u0095'
	0x96: pC,       // '\u0096'
	0x97: pC,       // '\u0097'
	0x98: pC,       // '\u0098'
	0x99: pC,       // '\u0099'
	0x9A: pC,       // '\u009a'
	0x9B: pC,       // '\u009b'
	0x9C: pC,       // '\u009c'
	0x9D: pC,       // '\u009d'
	0x9E: pC,       // '\u009e'
	0x9F: pC,       // '\u009f'
	0xA0: pZ,       // '\u00a0'
	0xA1: pP | pp,  // '¡'
	0xA2: pS | pp,  // '¢'
	0xA3: pS | pp,  // '£'
	0xA4: pS | pp,  // '¤'
	0xA5: pS | pp,  // '¥'
	0xA6: pS | pp,  // '¦'
	0xA7: pP | pp,  // '§'
	0xA8: pS | pp,  // '¨'
	0xA9: pS | pp,  // '©'
	0xAA: pLo | pp, // 'ª'
	0xAB: pP | pp,  // '«'
	0xAC: pS | pp,  // '¬'
	0xAD: 0,        // '\u00ad'
	0xAE: pS | pp,  // '®'
	0xAF: pS | pp,  // '¯'
	0xB0: pS | pp,  // '°'
	0xB1: pS | pp,  // '±'
	0xB2: pN | pp,  // '²'
	0xB3: pN | pp,  // '³'
	0xB4: pS | pp,  // '´'
	0xB5: pLl | pp, // 'µ'
	0xB6: pP | pp,  // '¶'
	0xB7: pP | pp,  // '·'
	0xB8: pS | pp,  // '¸'
	0xB9: pN | pp,  // '¹'
	0xBA: pLo | pp, // 'º'
	0xBB: pP | pp,  // '»'
	0xBC: pN | pp,  // '¼'
	0xBD: pN | pp,  // '½'
	0xBE: pN | pp,  // '¾'
	0xBF: pP | pp,  // '¿'
	0xC0: pLu | pp, // 'À'
	0xC1: pLu | pp, // 'Á'
	0xC2: pLu | pp, // 'Â'
	0xC3: pLu | pp, // 'Ã'
	0xC4: pLu | pp, // 'Ä'
	0xC5: pLu | pp, // 'Å'
	0xC6: pLu | pp, // 'Æ'
	0xC7: pLu | pp, // 'Ç'
	0xC8: pLu | pp, // 'È'
	0xC9: pLu | pp, // 'É'
	0xCA: pLu | pp, // 'Ê'
	0xCB: pLu | pp, // 'Ë'
	0xCC: pLu | pp, // 'Ì'
	0xCD: pLu | pp, // 'Í'
	0xCE: pLu | pp, // 'Î'
	0xCF: pLu | pp, // 'Ï'
	0xD0: pLu | pp, // 'Ð'
	0xD1: pLu | pp, // 'Ñ'
	0xD2: pLu | pp, // 'Ò'
	0xD3: pLu | pp, // 'Ó'
	0xD4: pLu | pp, // 'Ô'
	0xD5: pLu | pp, // 'Õ'
	0xD6: pLu | pp, // 'Ö'
	0xD7: pS | pp,  // '×'
	0xD8: pLu | pp, // 'Ø'
	0xD9: pLu | pp, // 'Ù'
	0xDA: pLu | pp, // 'Ú'
	0xDB: pLu | pp, // 'Û'
	0xDC: pLu | pp, // 'Ü'
	0xDD: pLu | pp, // 'Ý'
	0xDE: pLu | pp, // 'Þ'
	0xDF: pLl | pp, // 'ß'
	0xE0: pLl | pp, // 'à'
	0xE1: pLl | pp, // 'á'
	0xE2: pLl | pp, // 'â'
	0xE3: pLl | pp, // 'ã'
	0xE4: pLl | pp, // 'ä'
	0xE5: pLl | pp, // 'å'
	0xE6: pLl | pp, // 'æ'
	0xE7: pLl | pp, // 'ç'
	0xE8: pLl | pp, // 'è'
	0xE9: pLl | pp, // 'é'
	0xEA: pLl | pp, // 'ê'
	0xEB: pLl | pp, // 'ë'
	0xEC: pLl | pp, // 'ì'
	0xED: pLl | pp, // 'í'
	0xEE: pLl | pp, // 'î'
	0xEF: pLl | pp, // 'ï'
	0xF0: pLl | pp, // 'ð'
	0xF1: pLl | pp, // 'ñ'
	0xF2: pLl | pp, // 'ò'
	0xF3: pLl | pp, // 'ó'
	0xF4: pLl | pp, // 'ô'
	0xF5: pLl | pp, // 'õ'
	0xF6: pLl | pp, // 'ö'
	0xF7: pS | pp,  // '÷'
	0xF8: pLl | pp, // 'ø'
	0xF9: pLl | pp, // 'ù'
	0xFA: pLl | pp, // 'ú'
	0xFB: pLl | pp, // 'û'
	0xFC: pLl | pp, // 'ü'
	0xFD: pLl | pp, // 'ý'
	0xFE: pLl | pp, // 'þ'
	0xFF: pLl | pp, // 'ÿ'
}

var _L = &unicodeRangeTable{
	R16: []unicodeRange16{
		{0x0041, 0x005a, 1},
		{0x0061, 0x007a, 1},
		{0x00aa, 0x00b5, 11},
		{0x00ba, 0x00c0, 6},
		{0x00c1, 0x00d6, 1},
		{0x00d8, 0x00f6, 1},
		{0x00f8, 0x02c1, 1},
		{0x02c6, 0x02d1, 1},
		{0x02e0, 0x02e4, 1},
		{0x02ec, 0x02ee, 2},
		{0x0370, 0x0374, 1},
		{0x0376, 0x0377, 1},
		{0x037a, 0x037d, 1},
		{0x037f, 0x0386, 7},
		{0x0388, 0x038a, 1},
		{0x038c, 0x038e, 2},
		{0x038f, 0x03a1, 1},
		{0x03a3, 0x03f5, 1},
		{0x03f7, 0x0481, 1},
		{0x048a, 0x052f, 1},
		{0x0531, 0x0556, 1},
		{0x0559, 0x0560, 7},
		{0x0561, 0x0588, 1},
		{0x05d0, 0x05ea, 1},
		{0x05ef, 0x05f2, 1},
		{0x0620, 0x064a, 1},
		{0x066e, 0x066f, 1},
		{0x0671, 0x06d3, 1},
		{0x06d5, 0x06e5, 16},
		{0x06e6, 0x06ee, 8},
		{0x06ef, 0x06fa, 11},
		{0x06fb, 0x06fc, 1},
		{0x06ff, 0x0710, 17},
		{0x0712, 0x072f, 1},
		{0x074d, 0x07a5, 1},
		{0x07b1, 0x07ca, 25},
		{0x07cb, 0x07ea, 1},
		{0x07f4, 0x07f5, 1},
		{0x07fa, 0x0800, 6},
		{0x0801, 0x0815, 1},
		{0x081a, 0x0824, 10},
		{0x0828, 0x0840, 24},
		{0x0841, 0x0858, 1},
		{0x0860, 0x086a, 1},
		{0x08a0, 0x08b4, 1},
		{0x08b6, 0x08c7, 1},
		{0x0904, 0x0939, 1},
		{0x093d, 0x0950, 19},
		{0x0958, 0x0961, 1},
		{0x0971, 0x0980, 1},
		{0x0985, 0x098c, 1},
		{0x098f, 0x0990, 1},
		{0x0993, 0x09a8, 1},
		{0x09aa, 0x09b0, 1},
		{0x09b2, 0x09b6, 4},
		{0x09b7, 0x09b9, 1},
		{0x09bd, 0x09ce, 17},
		{0x09dc, 0x09dd, 1},
		{0x09df, 0x09e1, 1},
		{0x09f0, 0x09f1, 1},
		{0x09fc, 0x0a05, 9},
		{0x0a06, 0x0a0a, 1},
		{0x0a0f, 0x0a10, 1},
		{0x0a13, 0x0a28, 1},
		{0x0a2a, 0x0a30, 1},
		{0x0a32, 0x0a33, 1},
		{0x0a35, 0x0a36, 1},
		{0x0a38, 0x0a39, 1},
		{0x0a59, 0x0a5c, 1},
		{0x0a5e, 0x0a72, 20},
		{0x0a73, 0x0a74, 1},
		{0x0a85, 0x0a8d, 1},
		{0x0a8f, 0x0a91, 1},
		{0x0a93, 0x0aa8, 1},
		{0x0aaa, 0x0ab0, 1},
		{0x0ab2, 0x0ab3, 1},
		{0x0ab5, 0x0ab9, 1},
		{0x0abd, 0x0ad0, 19},
		{0x0ae0, 0x0ae1, 1},
		{0x0af9, 0x0b05, 12},
		{0x0b06, 0x0b0c, 1},
		{0x0b0f, 0x0b10, 1},
		{0x0b13, 0x0b28, 1},
		{0x0b2a, 0x0b30, 1},
		{0x0b32, 0x0b33, 1},
		{0x0b35, 0x0b39, 1},
		{0x0b3d, 0x0b5c, 31},
		{0x0b5d, 0x0b5f, 2},
		{0x0b60, 0x0b61, 1},
		{0x0b71, 0x0b83, 18},
		{0x0b85, 0x0b8a, 1},
		{0x0b8e, 0x0b90, 1},
		{0x0b92, 0x0b95, 1},
		{0x0b99, 0x0b9a, 1},
		{0x0b9c, 0x0b9e, 2},
		{0x0b9f, 0x0ba3, 4},
		{0x0ba4, 0x0ba8, 4},
		{0x0ba9, 0x0baa, 1},
		{0x0bae, 0x0bb9, 1},
		{0x0bd0, 0x0c05, 53},
		{0x0c06, 0x0c0c, 1},
		{0x0c0e, 0x0c10, 1},
		{0x0c12, 0x0c28, 1},
		{0x0c2a, 0x0c39, 1},
		{0x0c3d, 0x0c58, 27},
		{0x0c59, 0x0c5a, 1},
		{0x0c60, 0x0c61, 1},
		{0x0c80, 0x0c85, 5},
		{0x0c86, 0x0c8c, 1},
		{0x0c8e, 0x0c90, 1},
		{0x0c92, 0x0ca8, 1},
		{0x0caa, 0x0cb3, 1},
		{0x0cb5, 0x0cb9, 1},
		{0x0cbd, 0x0cde, 33},
		{0x0ce0, 0x0ce1, 1},
		{0x0cf1, 0x0cf2, 1},
		{0x0d04, 0x0d0c, 1},
		{0x0d0e, 0x0d10, 1},
		{0x0d12, 0x0d3a, 1},
		{0x0d3d, 0x0d4e, 17},
		{0x0d54, 0x0d56, 1},
		{0x0d5f, 0x0d61, 1},
		{0x0d7a, 0x0d7f, 1},
		{0x0d85, 0x0d96, 1},
		{0x0d9a, 0x0db1, 1},
		{0x0db3, 0x0dbb, 1},
		{0x0dbd, 0x0dc0, 3},
		{0x0dc1, 0x0dc6, 1},
		{0x0e01, 0x0e30, 1},
		{0x0e32, 0x0e33, 1},
		{0x0e40, 0x0e46, 1},
		{0x0e81, 0x0e82, 1},
		{0x0e84, 0x0e86, 2},
		{0x0e87, 0x0e8a, 1},
		{0x0e8c, 0x0ea3, 1},
		{0x0ea5, 0x0ea7, 2},
		{0x0ea8, 0x0eb0, 1},
		{0x0eb2, 0x0eb3, 1},
		{0x0ebd, 0x0ec0, 3},
		{0x0ec1, 0x0ec4, 1},
		{0x0ec6, 0x0edc, 22},
		{0x0edd, 0x0edf, 1},
		{0x0f00, 0x0f40, 64},
		{0x0f41, 0x0f47, 1},
		{0x0f49, 0x0f6c, 1},
		{0x0f88, 0x0f8c, 1},
		{0x1000, 0x102a, 1},
		{0x103f, 0x1050, 17},
		{0x1051, 0x1055, 1},
		{0x105a, 0x105d, 1},
		{0x1061, 0x1065, 4},
		{0x1066, 0x106e, 8},
		{0x106f, 0x1070, 1},
		{0x1075, 0x1081, 1},
		{0x108e, 0x10a0, 18},
		{0x10a1, 0x10c5, 1},
		{0x10c7, 0x10cd, 6},
		{0x10d0, 0x10fa, 1},
		{0x10fc, 0x1248, 1},
		{0x124a, 0x124d, 1},
		{0x1250, 0x1256, 1},
		{0x1258, 0x125a, 2},
		{0x125b, 0x125d, 1},
		{0x1260, 0x1288, 1},
		{0x128a, 0x128d, 1},
		{0x1290, 0x12b0, 1},
		{0x12b2, 0x12b5, 1},
		{0x12b8, 0x12be, 1},
		{0x12c0, 0x12c2, 2},
		{0x12c3, 0x12c5, 1},
		{0x12c8, 0x12d6, 1},
		{0x12d8, 0x1310, 1},
		{0x1312, 0x1315, 1},
		{0x1318, 0x135a, 1},
		{0x1380, 0x138f, 1},
		{0x13a0, 0x13f5, 1},
		{0x13f8, 0x13fd, 1},
		{0x1401, 0x166c, 1},
		{0x166f, 0x167f, 1},
		{0x1681, 0x169a, 1},
		{0x16a0, 0x16ea, 1},
		{0x16f1, 0x16f8, 1},
		{0x1700, 0x170c, 1},
		{0x170e, 0x1711, 1},
		{0x1720, 0x1731, 1},
		{0x1740, 0x1751, 1},
		{0x1760, 0x176c, 1},
		{0x176e, 0x1770, 1},
		{0x1780, 0x17b3, 1},
		{0x17d7, 0x17dc, 5},
		{0x1820, 0x1878, 1},
		{0x1880, 0x1884, 1},
		{0x1887, 0x18a8, 1},
		{0x18aa, 0x18b0, 6},
		{0x18b1, 0x18f5, 1},
		{0x1900, 0x191e, 1},
		{0x1950, 0x196d, 1},
		{0x1970, 0x1974, 1},
		{0x1980, 0x19ab, 1},
		{0x19b0, 0x19c9, 1},
		{0x1a00, 0x1a16, 1},
		{0x1a20, 0x1a54, 1},
		{0x1aa7, 0x1b05, 94},
		{0x1b06, 0x1b33, 1},
		{0x1b45, 0x1b4b, 1},
		{0x1b83, 0x1ba0, 1},
		{0x1bae, 0x1baf, 1},
		{0x1bba, 0x1be5, 1},
		{0x1c00, 0x1c23, 1},
		{0x1c4d, 0x1c4f, 1},
		{0x1c5a, 0x1c7d, 1},
		{0x1c80, 0x1c88, 1},
		{0x1c90, 0x1cba, 1},
		{0x1cbd, 0x1cbf, 1},
		{0x1ce9, 0x1cec, 1},
		{0x1cee, 0x1cf3, 1},
		{0x1cf5, 0x1cf6, 1},
		{0x1cfa, 0x1d00, 6},
		{0x1d01, 0x1dbf, 1},
		{0x1e00, 0x1f15, 1},
		{0x1f18, 0x1f1d, 1},
		{0x1f20, 0x1f45, 1},
		{0x1f48, 0x1f4d, 1},
		{0x1f50, 0x1f57, 1},
		{0x1f59, 0x1f5f, 2},
		{0x1f60, 0x1f7d, 1},
		{0x1f80, 0x1fb4, 1},
		{0x1fb6, 0x1fbc, 1},
		{0x1fbe, 0x1fc2, 4},
		{0x1fc3, 0x1fc4, 1},
		{0x1fc6, 0x1fcc, 1},
		{0x1fd0, 0x1fd3, 1},
		{0x1fd6, 0x1fdb, 1},
		{0x1fe0, 0x1fec, 1},
		{0x1ff2, 0x1ff4, 1},
		{0x1ff6, 0x1ffc, 1},
		{0x2071, 0x207f, 14},
		{0x2090, 0x209c, 1},
		{0x2102, 0x2107, 5},
		{0x210a, 0x2113, 1},
		{0x2115, 0x2119, 4},
		{0x211a, 0x211d, 1},
		{0x2124, 0x212a, 2},
		{0x212b, 0x212d, 1},
		{0x212f, 0x2139, 1},
		{0x213c, 0x213f, 1},
		{0x2145, 0x2149, 1},
		{0x214e, 0x2183, 53},
		{0x2184, 0x2c00, 2684},
		{0x2c01, 0x2c2e, 1},
		{0x2c30, 0x2c5e, 1},
		{0x2c60, 0x2ce4, 1},
		{0x2ceb, 0x2cee, 1},
		{0x2cf2, 0x2cf3, 1},
		{0x2d00, 0x2d25, 1},
		{0x2d27, 0x2d2d, 6},
		{0x2d30, 0x2d67, 1},
		{0x2d6f, 0x2d80, 17},
		{0x2d81, 0x2d96, 1},
		{0x2da0, 0x2da6, 1},
		{0x2da8, 0x2dae, 1},
		{0x2db0, 0x2db6, 1},
		{0x2db8, 0x2dbe, 1},
		{0x2dc0, 0x2dc6, 1},
		{0x2dc8, 0x2dce, 1},
		{0x2dd0, 0x2dd6, 1},
		{0x2dd8, 0x2dde, 1},
		{0x2e2f, 0x3005, 470},
		{0x3006, 0x3031, 43},
		{0x3032, 0x3035, 1},
		{0x303b, 0x303c, 1},
		{0x3041, 0x3096, 1},
		{0x309d, 0x309f, 1},
		{0x30a1, 0x30fa, 1},
		{0x30fc, 0x30ff, 1},
		{0x3105, 0x312f, 1},
		{0x3131, 0x318e, 1},
		{0x31a0, 0x31bf, 1},
		{0x31f0, 0x31ff, 1},
		{0x3400, 0x4dbf, 1},
		{0x4e00, 0x9ffc, 1},
		{0xa000, 0xa48c, 1},
		{0xa4d0, 0xa4fd, 1},
		{0xa500, 0xa60c, 1},
		{0xa610, 0xa61f, 1},
		{0xa62a, 0xa62b, 1},
		{0xa640, 0xa66e, 1},
		{0xa67f, 0xa69d, 1},
		{0xa6a0, 0xa6e5, 1},
		{0xa717, 0xa71f, 1},
		{0xa722, 0xa788, 1},
		{0xa78b, 0xa7bf, 1},
		{0xa7c2, 0xa7ca, 1},
		{0xa7f5, 0xa801, 1},
		{0xa803, 0xa805, 1},
		{0xa807, 0xa80a, 1},
		{0xa80c, 0xa822, 1},
		{0xa840, 0xa873, 1},
		{0xa882, 0xa8b3, 1},
		{0xa8f2, 0xa8f7, 1},
		{0xa8fb, 0xa8fd, 2},
		{0xa8fe, 0xa90a, 12},
		{0xa90b, 0xa925, 1},
		{0xa930, 0xa946, 1},
		{0xa960, 0xa97c, 1},
		{0xa984, 0xa9b2, 1},
		{0xa9cf, 0xa9e0, 17},
		{0xa9e1, 0xa9e4, 1},
		{0xa9e6, 0xa9ef, 1},
		{0xa9fa, 0xa9fe, 1},
		{0xaa00, 0xaa28, 1},
		{0xaa40, 0xaa42, 1},
		{0xaa44, 0xaa4b, 1},
		{0xaa60, 0xaa76, 1},
		{0xaa7a, 0xaa7e, 4},
		{0xaa7f, 0xaaaf, 1},
		{0xaab1, 0xaab5, 4},
		{0xaab6, 0xaab9, 3},
		{0xaaba, 0xaabd, 1},
		{0xaac0, 0xaac2, 2},
		{0xaadb, 0xaadd, 1},
		{0xaae0, 0xaaea, 1},
		{0xaaf2, 0xaaf4, 1},
		{0xab01, 0xab06, 1},
		{0xab09, 0xab0e, 1},
		{0xab11, 0xab16, 1},
		{0xab20, 0xab26, 1},
		{0xab28, 0xab2e, 1},
		{0xab30, 0xab5a, 1},
		{0xab5c, 0xab69, 1},
		{0xab70, 0xabe2, 1},
		{0xac00, 0xd7a3, 1},
		{0xd7b0, 0xd7c6, 1},
		{0xd7cb, 0xd7fb, 1},
		{0xf900, 0xfa6d, 1},
		{0xfa70, 0xfad9, 1},
		{0xfb00, 0xfb06, 1},
		{0xfb13, 0xfb17, 1},
		{0xfb1d, 0xfb1f, 2},
		{0xfb20, 0xfb28, 1},
		{0xfb2a, 0xfb36, 1},
		{0xfb38, 0xfb3c, 1},
		{0xfb3e, 0xfb40, 2},
		{0xfb41, 0xfb43, 2},
		{0xfb44, 0xfb46, 2},
		{0xfb47, 0xfbb1, 1},
		{0xfbd3, 0xfd3d, 1},
		{0xfd50, 0xfd8f, 1},
		{0xfd92, 0xfdc7, 1},
		{0xfdf0, 0xfdfb, 1},
		{0xfe70, 0xfe74, 1},
		{0xfe76, 0xfefc, 1},
		{0xff21, 0xff3a, 1},
		{0xff41, 0xff5a, 1},
		{0xff66, 0xffbe, 1},
		{0xffc2, 0xffc7, 1},
		{0xffca, 0xffcf, 1},
		{0xffd2, 0xffd7, 1},
		{0xffda, 0xffdc, 1},
	},
	R32: []unicodeRange32{
		{0x10000, 0x1000b, 1},
		{0x1000d, 0x10026, 1},
		{0x10028, 0x1003a, 1},
		{0x1003c, 0x1003d, 1},
		{0x1003f, 0x1004d, 1},
		{0x10050, 0x1005d, 1},
		{0x10080, 0x100fa, 1},
		{0x10280, 0x1029c, 1},
		{0x102a0, 0x102d0, 1},
		{0x10300, 0x1031f, 1},
		{0x1032d, 0x10340, 1},
		{0x10342, 0x10349, 1},
		{0x10350, 0x10375, 1},
		{0x10380, 0x1039d, 1},
		{0x103a0, 0x103c3, 1},
		{0x103c8, 0x103cf, 1},
		{0x10400, 0x1049d, 1},
		{0x104b0, 0x104d3, 1},
		{0x104d8, 0x104fb, 1},
		{0x10500, 0x10527, 1},
		{0x10530, 0x10563, 1},
		{0x10600, 0x10736, 1},
		{0x10740, 0x10755, 1},
		{0x10760, 0x10767, 1},
		{0x10800, 0x10805, 1},
		{0x10808, 0x1080a, 2},
		{0x1080b, 0x10835, 1},
		{0x10837, 0x10838, 1},
		{0x1083c, 0x1083f, 3},
		{0x10840, 0x10855, 1},
		{0x10860, 0x10876, 1},
		{0x10880, 0x1089e, 1},
		{0x108e0, 0x108f2, 1},
		{0x108f4, 0x108f5, 1},
		{0x10900, 0x10915, 1},
		{0x10920, 0x10939, 1},
		{0x10980, 0x109b7, 1},
		{0x109be, 0x109bf, 1},
		{0x10a00, 0x10a10, 16},
		{0x10a11, 0x10a13, 1},
		{0x10a15, 0x10a17, 1},
		{0x10a19, 0x10a35, 1},
		{0x10a60, 0x10a7c, 1},
		{0x10a80, 0x10a9c, 1},
		{0x10ac0, 0x10ac7, 1},
		{0x10ac9, 0x10ae4, 1},
		{0x10b00, 0x10b35, 1},
		{0x10b40, 0x10b55, 1},
		{0x10b60, 0x10b72, 1},
		{0x10b80, 0x10b91, 1},
		{0x10c00, 0x10c48, 1},
		{0x10c80, 0x10cb2, 1},
		{0x10cc0, 0x10cf2, 1},
		{0x10d00, 0x10d23, 1},
		{0x10e80, 0x10ea9, 1},
		{0x10eb0, 0x10eb1, 1},
		{0x10f00, 0x10f1c, 1},
		{0x10f27, 0x10f30, 9},
		{0x10f31, 0x10f45, 1},
		{0x10fb0, 0x10fc4, 1},
		{0x10fe0, 0x10ff6, 1},
		{0x11003, 0x11037, 1},
		{0x11083, 0x110af, 1},
		{0x110d0, 0x110e8, 1},
		{0x11103, 0x11126, 1},
		{0x11144, 0x11147, 3},
		{0x11150, 0x11172, 1},
		{0x11176, 0x11183, 13},
		{0x11184, 0x111b2, 1},
		{0x111c1, 0x111c4, 1},
		{0x111da, 0x111dc, 2},
		{0x11200, 0x11211, 1},
		{0x11213, 0x1122b, 1},
		{0x11280, 0x11286, 1},
		{0x11288, 0x1128a, 2},
		{0x1128b, 0x1128d, 1},
		{0x1128f, 0x1129d, 1},
		{0x1129f, 0x112a8, 1},
		{0x112b0, 0x112de, 1},
		{0x11305, 0x1130c, 1},
		{0x1130f, 0x11310, 1},
		{0x11313, 0x11328, 1},
		{0x1132a, 0x11330, 1},
		{0x11332, 0x11333, 1},
		{0x11335, 0x11339, 1},
		{0x1133d, 0x11350, 19},
		{0x1135d, 0x11361, 1},
		{0x11400, 0x11434, 1},
		{0x11447, 0x1144a, 1},
		{0x1145f, 0x11461, 1},
		{0x11480, 0x114af, 1},
		{0x114c4, 0x114c5, 1},
		{0x114c7, 0x11580, 185},
		{0x11581, 0x115ae, 1},
		{0x115d8, 0x115db, 1},
		{0x11600, 0x1162f, 1},
		{0x11644, 0x11680, 60},
		{0x11681, 0x116aa, 1},
		{0x116b8, 0x11700, 72},
		{0x11701, 0x1171a, 1},
		{0x11800, 0x1182b, 1},
		{0x118a0, 0x118df, 1},
		{0x118ff, 0x11906, 1},
		{0x11909, 0x1190c, 3},
		{0x1190d, 0x11913, 1},
		{0x11915, 0x11916, 1},
		{0x11918, 0x1192f, 1},
		{0x1193f, 0x11941, 2},
		{0x119a0, 0x119a7, 1},
		{0x119aa, 0x119d0, 1},
		{0x119e1, 0x119e3, 2},
		{0x11a00, 0x11a0b, 11},
		{0x11a0c, 0x11a32, 1},
		{0x11a3a, 0x11a50, 22},
		{0x11a5c, 0x11a89, 1},
		{0x11a9d, 0x11ac0, 35},
		{0x11ac1, 0x11af8, 1},
		{0x11c00, 0x11c08, 1},
		{0x11c0a, 0x11c2e, 1},
		{0x11c40, 0x11c72, 50},
		{0x11c73, 0x11c8f, 1},
		{0x11d00, 0x11d06, 1},
		{0x11d08, 0x11d09, 1},
		{0x11d0b, 0x11d30, 1},
		{0x11d46, 0x11d60, 26},
		{0x11d61, 0x11d65, 1},
		{0x11d67, 0x11d68, 1},
		{0x11d6a, 0x11d89, 1},
		{0x11d98, 0x11ee0, 328},
		{0x11ee1, 0x11ef2, 1},
		{0x11fb0, 0x12000, 80},
		{0x12001, 0x12399, 1},
		{0x12480, 0x12543, 1},
		{0x13000, 0x1342e, 1},
		{0x14400, 0x14646, 1},
		{0x16800, 0x16a38, 1},
		{0x16a40, 0x16a5e, 1},
		{0x16ad0, 0x16aed, 1},
		{0x16b00, 0x16b2f, 1},
		{0x16b40, 0x16b43, 1},
		{0x16b63, 0x16b77, 1},
		{0x16b7d, 0x16b8f, 1},
		{0x16e40, 0x16e7f, 1},
		{0x16f00, 0x16f4a, 1},
		{0x16f50, 0x16f93, 67},
		{0x16f94, 0x16f9f, 1},
		{0x16fe0, 0x16fe1, 1},
		{0x16fe3, 0x17000, 29},
		{0x17001, 0x187f7, 1},
		{0x18800, 0x18cd5, 1},
		{0x18d00, 0x18d08, 1},
		{0x1b000, 0x1b11e, 1},
		{0x1b150, 0x1b152, 1},
		{0x1b164, 0x1b167, 1},
		{0x1b170, 0x1b2fb, 1},
		{0x1bc00, 0x1bc6a, 1},
		{0x1bc70, 0x1bc7c, 1},
		{0x1bc80, 0x1bc88, 1},
		{0x1bc90, 0x1bc99, 1},
		{0x1d400, 0x1d454, 1},
		{0x1d456, 0x1d49c, 1},
		{0x1d49e, 0x1d49f, 1},
		{0x1d4a2, 0x1d4a5, 3},
		{0x1d4a6, 0x1d4a9, 3},
		{0x1d4aa, 0x1d4ac, 1},
		{0x1d4ae, 0x1d4b9, 1},
		{0x1d4bb, 0x1d4bd, 2},
		{0x1d4be, 0x1d4c3, 1},
		{0x1d4c5, 0x1d505, 1},
		{0x1d507, 0x1d50a, 1},
		{0x1d50d, 0x1d514, 1},
		{0x1d516, 0x1d51c, 1},
		{0x1d51e, 0x1d539, 1},
		{0x1d53b, 0x1d53e, 1},
		{0x1d540, 0x1d544, 1},
		{0x1d546, 0x1d54a, 4},
		{0x1d54b, 0x1d550, 1},
		{0x1d552, 0x1d6a5, 1},
		{0x1d6a8, 0x1d6c0, 1},
		{0x1d6c2, 0x1d6da, 1},
		{0x1d6dc, 0x1d6fa, 1},
		{0x1d6fc, 0x1d714, 1},
		{0x1d716, 0x1d734, 1},
		{0x1d736, 0x1d74e, 1},
		{0x1d750, 0x1d76e, 1},
		{0x1d770, 0x1d788, 1},
		{0x1d78a, 0x1d7a8, 1},
		{0x1d7aa, 0x1d7c2, 1},
		{0x1d7c4, 0x1d7cb, 1},
		{0x1e100, 0x1e12c, 1},
		{0x1e137, 0x1e13d, 1},
		{0x1e14e, 0x1e2c0, 370},
		{0x1e2c1, 0x1e2eb, 1},
		{0x1e800, 0x1e8c4, 1},
		{0x1e900, 0x1e943, 1},
		{0x1e94b, 0x1ee00, 1205},
		{0x1ee01, 0x1ee03, 1},
		{0x1ee05, 0x1ee1f, 1},
		{0x1ee21, 0x1ee22, 1},
		{0x1ee24, 0x1ee27, 3},
		{0x1ee29, 0x1ee32, 1},
		{0x1ee34, 0x1ee37, 1},
		{0x1ee39, 0x1ee3b, 2},
		{0x1ee42, 0x1ee47, 5},
		{0x1ee49, 0x1ee4d, 2},
		{0x1ee4e, 0x1ee4f, 1},
		{0x1ee51, 0x1ee52, 1},
		{0x1ee54, 0x1ee57, 3},
		{0x1ee59, 0x1ee61, 2},
		{0x1ee62, 0x1ee64, 2},
		{0x1ee67, 0x1ee6a, 1},
		{0x1ee6c, 0x1ee72, 1},
		{0x1ee74, 0x1ee77, 1},
		{0x1ee79, 0x1ee7c, 1},
		{0x1ee7e, 0x1ee80, 2},
		{0x1ee81, 0x1ee89, 1},
		{0x1ee8b, 0x1ee9b, 1},
		{0x1eea1, 0x1eea3, 1},
		{0x1eea5, 0x1eea9, 1},
		{0x1eeab, 0x1eebb, 1},
		{0x20000, 0x2a6dd, 1},
		{0x2a700, 0x2b734, 1},
		{0x2b740, 0x2b81d, 1},
		{0x2b820, 0x2cea1, 1},
		{0x2ceb0, 0x2ebe0, 1},
		{0x2f800, 0x2fa1d, 1},
		{0x30000, 0x3134a, 1},
	},
	LatinOffset: 6,
}

var _M = &unicodeRangeTable{
	R16: []unicodeRange16{
		{0x0300, 0x036f, 1},
		{0x0483, 0x0489, 1},
		{0x0591, 0x05bd, 1},
		{0x05bf, 0x05c1, 2},
		{0x05c2, 0x05c4, 2},
		{0x05c5, 0x05c7, 2},
		{0x0610, 0x061a, 1},
		{0x064b, 0x065f, 1},
		{0x0670, 0x06d6, 102},
		{0x06d7, 0x06dc, 1},
		{0x06df, 0x06e4, 1},
		{0x06e7, 0x06e8, 1},
		{0x06ea, 0x06ed, 1},
		{0x0711, 0x0730, 31},
		{0x0731, 0x074a, 1},
		{0x07a6, 0x07b0, 1},
		{0x07eb, 0x07f3, 1},
		{0x07fd, 0x0816, 25},
		{0x0817, 0x0819, 1},
		{0x081b, 0x0823, 1},
		{0x0825, 0x0827, 1},
		{0x0829, 0x082d, 1},
		{0x0859, 0x085b, 1},
		{0x08d3, 0x08e1, 1},
		{0x08e3, 0x0903, 1},
		{0x093a, 0x093c, 1},
		{0x093e, 0x094f, 1},
		{0x0951, 0x0957, 1},
		{0x0962, 0x0963, 1},
		{0x0981, 0x0983, 1},
		{0x09bc, 0x09be, 2},
		{0x09bf, 0x09c4, 1},
		{0x09c7, 0x09c8, 1},
		{0x09cb, 0x09cd, 1},
		{0x09d7, 0x09e2, 11},
		{0x09e3, 0x09fe, 27},
		{0x0a01, 0x0a03, 1},
		{0x0a3c, 0x0a3e, 2},
		{0x0a3f, 0x0a42, 1},
		{0x0a47, 0x0a48, 1},
		{0x0a4b, 0x0a4d, 1},
		{0x0a51, 0x0a70, 31},
		{0x0a71, 0x0a75, 4},
		{0x0a81, 0x0a83, 1},
		{0x0abc, 0x0abe, 2},
		{0x0abf, 0x0ac5, 1},
		{0x0ac7, 0x0ac9, 1},
		{0x0acb, 0x0acd, 1},
		{0x0ae2, 0x0ae3, 1},
		{0x0afa, 0x0aff, 1},
		{0x0b01, 0x0b03, 1},
		{0x0b3c, 0x0b3e, 2},
		{0x0b3f, 0x0b44, 1},
		{0x0b47, 0x0b48, 1},
		{0x0b4b, 0x0b4d, 1},
		{0x0b55, 0x0b57, 1},
		{0x0b62, 0x0b63, 1},
		{0x0b82, 0x0bbe, 60},
		{0x0bbf, 0x0bc2, 1},
		{0x0bc6, 0x0bc8, 1},
		{0x0bca, 0x0bcd, 1},
		{0x0bd7, 0x0c00, 41},
		{0x0c01, 0x0c04, 1},
		{0x0c3e, 0x0c44, 1},
		{0x0c46, 0x0c48, 1},
		{0x0c4a, 0x0c4d, 1},
		{0x0c55, 0x0c56, 1},
		{0x0c62, 0x0c63, 1},
		{0x0c81, 0x0c83, 1},
		{0x0cbc, 0x0cbe, 2},
		{0x0cbf, 0x0cc4, 1},
		{0x0cc6, 0x0cc8, 1},
		{0x0cca, 0x0ccd, 1},
		{0x0cd5, 0x0cd6, 1},
		{0x0ce2, 0x0ce3, 1},
		{0x0d00, 0x0d03, 1},
		{0x0d3b, 0x0d3c, 1},
		{0x0d3e, 0x0d44, 1},
		{0x0d46, 0x0d48, 1},
		{0x0d4a, 0x0d4d, 1},
		{0x0d57, 0x0d62, 11},
		{0x0d63, 0x0d81, 30},
		{0x0d82, 0x0d83, 1},
		{0x0dca, 0x0dcf, 5},
		{0x0dd0, 0x0dd4, 1},
		{0x0dd6, 0x0dd8, 2},
		{0x0dd9, 0x0ddf, 1},
		{0x0df2, 0x0df3, 1},
		{0x0e31, 0x0e34, 3},
		{0x0e35, 0x0e3a, 1},
		{0x0e47, 0x0e4e, 1},
		{0x0eb1, 0x0eb4, 3},
		{0x0eb5, 0x0ebc, 1},
		{0x0ec8, 0x0ecd, 1},
		{0x0f18, 0x0f19, 1},
		{0x0f35, 0x0f39, 2},
		{0x0f3e, 0x0f3f, 1},
		{0x0f71, 0x0f84, 1},
		{0x0f86, 0x0f87, 1},
		{0x0f8d, 0x0f97, 1},
		{0x0f99, 0x0fbc, 1},
		{0x0fc6, 0x102b, 101},
		{0x102c, 0x103e, 1},
		{0x1056, 0x1059, 1},
		{0x105e, 0x1060, 1},
		{0x1062, 0x1064, 1},
		{0x1067, 0x106d, 1},
		{0x1071, 0x1074, 1},
		{0x1082, 0x108d, 1},
		{0x108f, 0x109a, 11},
		{0x109b, 0x109d, 1},
		{0x135d, 0x135f, 1},
		{0x1712, 0x1714, 1},
		{0x1732, 0x1734, 1},
		{0x1752, 0x1753, 1},
		{0x1772, 0x1773, 1},
		{0x17b4, 0x17d3, 1},
		{0x17dd, 0x180b, 46},
		{0x180c, 0x180d, 1},
		{0x1885, 0x1886, 1},
		{0x18a9, 0x1920, 119},
		{0x1921, 0x192b, 1},
		{0x1930, 0x193b, 1},
		{0x1a17, 0x1a1b, 1},
		{0x1a55, 0x1a5e, 1},
		{0x1a60, 0x1a7c, 1},
		{0x1a7f, 0x1ab0, 49},
		{0x1ab1, 0x1ac0, 1},
		{0x1b00, 0x1b04, 1},
		{0x1b34, 0x1b44, 1},
		{0x1b6b, 0x1b73, 1},
		{0x1b80, 0x1b82, 1},
		{0x1ba1, 0x1bad, 1},
		{0x1be6, 0x1bf3, 1},
		{0x1c24, 0x1c37, 1},
		{0x1cd0, 0x1cd2, 1},
		{0x1cd4, 0x1ce8, 1},
		{0x1ced, 0x1cf4, 7},
		{0x1cf7, 0x1cf9, 1},
		{0x1dc0, 0x1df9, 1},
		{0x1dfb, 0x1dff, 1},
		{0x20d0, 0x20f0, 1},
		{0x2cef, 0x2cf1, 1},
		{0x2d7f, 0x2de0, 97},
		{0x2de1, 0x2dff, 1},
		{0x302a, 0x302f, 1},
		{0x3099, 0x309a, 1},
		{0xa66f, 0xa672, 1},
		{0xa674, 0xa67d, 1},
		{0xa69e, 0xa69f, 1},
		{0xa6f0, 0xa6f1, 1},
		{0xa802, 0xa806, 4},
		{0xa80b, 0xa823, 24},
		{0xa824, 0xa827, 1},
		{0xa82c, 0xa880, 84},
		{0xa881, 0xa8b4, 51},
		{0xa8b5, 0xa8c5, 1},
		{0xa8e0, 0xa8f1, 1},
		{0xa8ff, 0xa926, 39},
		{0xa927, 0xa92d, 1},
		{0xa947, 0xa953, 1},
		{0xa980, 0xa983, 1},
		{0xa9b3, 0xa9c0, 1},
		{0xa9e5, 0xaa29, 68},
		{0xaa2a, 0xaa36, 1},
		{0xaa43, 0xaa4c, 9},
		{0xaa4d, 0xaa7b, 46},
		{0xaa7c, 0xaa7d, 1},
		{0xaab0, 0xaab2, 2},
		{0xaab3, 0xaab4, 1},
		{0xaab7, 0xaab8, 1},
		{0xaabe, 0xaabf, 1},
		{0xaac1, 0xaaeb, 42},
		{0xaaec, 0xaaef, 1},
		{0xaaf5, 0xaaf6, 1},
		{0xabe3, 0xabea, 1},
		{0xabec, 0xabed, 1},
		{0xfb1e, 0xfe00, 738},
		{0xfe01, 0xfe0f, 1},
		{0xfe20, 0xfe2f, 1},
	},
	R32: []unicodeRange32{
		{0x101fd, 0x102e0, 227},
		{0x10376, 0x1037a, 1},
		{0x10a01, 0x10a03, 1},
		{0x10a05, 0x10a06, 1},
		{0x10a0c, 0x10a0f, 1},
		{0x10a38, 0x10a3a, 1},
		{0x10a3f, 0x10ae5, 166},
		{0x10ae6, 0x10d24, 574},
		{0x10d25, 0x10d27, 1},
		{0x10eab, 0x10eac, 1},
		{0x10f46, 0x10f50, 1},
		{0x11000, 0x11002, 1},
		{0x11038, 0x11046, 1},
		{0x1107f, 0x11082, 1},
		{0x110b0, 0x110ba, 1},
		{0x11100, 0x11102, 1},
		{0x11127, 0x11134, 1},
		{0x11145, 0x11146, 1},
		{0x11173, 0x11180, 13},
		{0x11181, 0x11182, 1},
		{0x111b3, 0x111c0, 1},
		{0x111c9, 0x111cc, 1},
		{0x111ce, 0x111cf, 1},
		{0x1122c, 0x11237, 1},
		{0x1123e, 0x112df, 161},
		{0x112e0, 0x112ea, 1},
		{0x11300, 0x11303, 1},
		{0x1133b, 0x1133c, 1},
		{0x1133e, 0x11344, 1},
		{0x11347, 0x11348, 1},
		{0x1134b, 0x1134d, 1},
		{0x11357, 0x11362, 11},
		{0x11363, 0x11366, 3},
		{0x11367, 0x1136c, 1},
		{0x11370, 0x11374, 1},
		{0x11435, 0x11446, 1},
		{0x1145e, 0x114b0, 82},
		{0x114b1, 0x114c3, 1},
		{0x115af, 0x115b5, 1},
		{0x115b8, 0x115c0, 1},
		{0x115dc, 0x115dd, 1},
		{0x11630, 0x11640, 1},
		{0x116ab, 0x116b7, 1},
		{0x1171d, 0x1172b, 1},
		{0x1182c, 0x1183a, 1},
		{0x11930, 0x11935, 1},
		{0x11937, 0x11938, 1},
		{0x1193b, 0x1193e, 1},
		{0x11940, 0x11942, 2},
		{0x11943, 0x119d1, 142},
		{0x119d2, 0x119d7, 1},
		{0x119da, 0x119e0, 1},
		{0x119e4, 0x11a01, 29},
		{0x11a02, 0x11a0a, 1},
		{0x11a33, 0x11a39, 1},
		{0x11a3b, 0x11a3e, 1},
		{0x11a47, 0x11a51, 10},
		{0x11a52, 0x11a5b, 1},
		{0x11a8a, 0x11a99, 1},
		{0x11c2f, 0x11c36, 1},
		{0x11c38, 0x11c3f, 1},
		{0x11c92, 0x11ca7, 1},
		{0x11ca9, 0x11cb6, 1},
		{0x11d31, 0x11d36, 1},
		{0x11d3a, 0x11d3c, 2},
		{0x11d3d, 0x11d3f, 2},
		{0x11d40, 0x11d45, 1},
		{0x11d47, 0x11d8a, 67},
		{0x11d8b, 0x11d8e, 1},
		{0x11d90, 0x11d91, 1},
		{0x11d93, 0x11d97, 1},
		{0x11ef3, 0x11ef6, 1},
		{0x16af0, 0x16af4, 1},
		{0x16b30, 0x16b36, 1},
		{0x16f4f, 0x16f51, 2},
		{0x16f52, 0x16f87, 1},
		{0x16f8f, 0x16f92, 1},
		{0x16fe4, 0x16ff0, 12},
		{0x16ff1, 0x1bc9d, 19628},
		{0x1bc9e, 0x1d165, 5319},
		{0x1d166, 0x1d169, 1},
		{0x1d16d, 0x1d172, 1},
		{0x1d17b, 0x1d182, 1},
		{0x1d185, 0x1d18b, 1},
		{0x1d1aa, 0x1d1ad, 1},
		{0x1d242, 0x1d244, 1},
		{0x1da00, 0x1da36, 1},
		{0x1da3b, 0x1da6c, 1},
		{0x1da75, 0x1da84, 15},
		{0x1da9b, 0x1da9f, 1},
		{0x1daa1, 0x1daaf, 1},
		{0x1e000, 0x1e006, 1},
		{0x1e008, 0x1e018, 1},
		{0x1e01b, 0x1e021, 1},
		{0x1e023, 0x1e024, 1},
		{0x1e026, 0x1e02a, 1},
		{0x1e130, 0x1e136, 1},
		{0x1e2ec, 0x1e2ef, 1},
		{0x1e8d0, 0x1e8d6, 1},
		{0x1e944, 0x1e94a, 1},
		{0xe0100, 0xe01ef, 1},
	},
}

var _N = &unicodeRangeTable{
	R16: []unicodeRange16{
		{0x0030, 0x0039, 1},
		{0x00b2, 0x00b3, 1},
		{0x00b9, 0x00bc, 3},
		{0x00bd, 0x00be, 1},
		{0x0660, 0x0669, 1},
		{0x06f0, 0x06f9, 1},
		{0x07c0, 0x07c9, 1},
		{0x0966, 0x096f, 1},
		{0x09e6, 0x09ef, 1},
		{0x09f4, 0x09f9, 1},
		{0x0a66, 0x0a6f, 1},
		{0x0ae6, 0x0aef, 1},
		{0x0b66, 0x0b6f, 1},
		{0x0b72, 0x0b77, 1},
		{0x0be6, 0x0bf2, 1},
		{0x0c66, 0x0c6f, 1},
		{0x0c78, 0x0c7e, 1},
		{0x0ce6, 0x0cef, 1},
		{0x0d58, 0x0d5e, 1},
		{0x0d66, 0x0d78, 1},
		{0x0de6, 0x0def, 1},
		{0x0e50, 0x0e59, 1},
		{0x0ed0, 0x0ed9, 1},
		{0x0f20, 0x0f33, 1},
		{0x1040, 0x1049, 1},
		{0x1090, 0x1099, 1},
		{0x1369, 0x137c, 1},
		{0x16ee, 0x16f0, 1},
		{0x17e0, 0x17e9, 1},
		{0x17f0, 0x17f9, 1},
		{0x1810, 0x1819, 1},
		{0x1946, 0x194f, 1},
		{0x19d0, 0x19da, 1},
		{0x1a80, 0x1a89, 1},
		{0x1a90, 0x1a99, 1},
		{0x1b50, 0x1b59, 1},
		{0x1bb0, 0x1bb9, 1},
		{0x1c40, 0x1c49, 1},
		{0x1c50, 0x1c59, 1},
		{0x2070, 0x2074, 4},
		{0x2075, 0x2079, 1},
		{0x2080, 0x2089, 1},
		{0x2150, 0x2182, 1},
		{0x2185, 0x2189, 1},
		{0x2460, 0x249b, 1},
		{0x24ea, 0x24ff, 1},
		{0x2776, 0x2793, 1},
		{0x2cfd, 0x3007, 778},
		{0x3021, 0x3029, 1},
		{0x3038, 0x303a, 1},
		{0x3192, 0x3195, 1},
		{0x3220, 0x3229, 1},
		{0x3248, 0x324f, 1},
		{0x3251, 0x325f, 1},
		{0x3280, 0x3289, 1},
		{0x32b1, 0x32bf, 1},
		{0xa620, 0xa629, 1},
		{0xa6e6, 0xa6ef, 1},
		{0xa830, 0xa835, 1},
		{0xa8d0, 0xa8d9, 1},
		{0xa900, 0xa909, 1},
		{0xa9d0, 0xa9d9, 1},
		{0xa9f0, 0xa9f9, 1},
		{0xaa50, 0xaa59, 1},
		{0xabf0, 0xabf9, 1},
		{0xff10, 0xff19, 1},
	},
	R32: []unicodeRange32{
		{0x10107, 0x10133, 1},
		{0x10140, 0x10178, 1},
		{0x1018a, 0x1018b, 1},
		{0x102e1, 0x102fb, 1},
		{0x10320, 0x10323, 1},
		{0x10341, 0x1034a, 9},
		{0x103d1, 0x103d5, 1},
		{0x104a0, 0x104a9, 1},
		{0x10858, 0x1085f, 1},
		{0x10879, 0x1087f, 1},
		{0x108a7, 0x108af, 1},
		{0x108fb, 0x108ff, 1},
		{0x10916, 0x1091b, 1},
		{0x109bc, 0x109bd, 1},
		{0x109c0, 0x109cf, 1},
		{0x109d2, 0x109ff, 1},
		{0x10a40, 0x10a48, 1},
		{0x10a7d, 0x10a7e, 1},
		{0x10a9d, 0x10a9f, 1},
		{0x10aeb, 0x10aef, 1},
		{0x10b58, 0x10b5f, 1},
		{0x10b78, 0x10b7f, 1},
		{0x10ba9, 0x10baf, 1},
		{0x10cfa, 0x10cff, 1},
		{0x10d30, 0x10d39, 1},
		{0x10e60, 0x10e7e, 1},
		{0x10f1d, 0x10f26, 1},
		{0x10f51, 0x10f54, 1},
		{0x10fc5, 0x10fcb, 1},
		{0x11052, 0x1106f, 1},
		{0x110f0, 0x110f9, 1},
		{0x11136, 0x1113f, 1},
		{0x111d0, 0x111d9, 1},
		{0x111e1, 0x111f4, 1},
		{0x112f0, 0x112f9, 1},
		{0x11450, 0x11459, 1},
		{0x114d0, 0x114d9, 1},
		{0x11650, 0x11659, 1},
		{0x116c0, 0x116c9, 1},
		{0x11730, 0x1173b, 1},
		{0x118e0, 0x118f2, 1},
		{0x11950, 0x11959, 1},
		{0x11c50, 0x11c6c, 1},
		{0x11d50, 0x11d59, 1},
		{0x11da0, 0x11da9, 1},
		{0x11fc0, 0x11fd4, 1},
		{0x12400, 0x1246e, 1},
		{0x16a60, 0x16a69, 1},
		{0x16b50, 0x16b59, 1},
		{0x16b5b, 0x16b61, 1},
		{0x16e80, 0x16e96, 1},
		{0x1d2e0, 0x1d2f3, 1},
		{0x1d360, 0x1d378, 1},
		{0x1d7ce, 0x1d7ff, 1},
		{0x1e140, 0x1e149, 1},
		{0x1e2f0, 0x1e2f9, 1},
		{0x1e8c7, 0x1e8cf, 1},
		{0x1e950, 0x1e959, 1},
		{0x1ec71, 0x1ecab, 1},
		{0x1ecad, 0x1ecaf, 1},
		{0x1ecb1, 0x1ecb4, 1},
		{0x1ed01, 0x1ed2d, 1},
		{0x1ed2f, 0x1ed3d, 1},
		{0x1f100, 0x1f10c, 1},
		{0x1fbf0, 0x1fbf9, 1},
	},
	LatinOffset: 4,
}

var _P = &unicodeRangeTable{
	R16: []unicodeRange16{
		{0x0021, 0x0023, 1},
		{0x0025, 0x002a, 1},
		{0x002c, 0x002f, 1},
		{0x003a, 0x003b, 1},
		{0x003f, 0x0040, 1},
		{0x005b, 0x005d, 1},
		{0x005f, 0x007b, 28},
		{0x007d, 0x00a1, 36},
		{0x00a7, 0x00ab, 4},
		{0x00b6, 0x00b7, 1},
		{0x00bb, 0x00bf, 4},
		{0x037e, 0x0387, 9},
		{0x055a, 0x055f, 1},
		{0x0589, 0x058a, 1},
		{0x05be, 0x05c0, 2},
		{0x05c3, 0x05c6, 3},
		{0x05f3, 0x05f4, 1},
		{0x0609, 0x060a, 1},
		{0x060c, 0x060d, 1},
		{0x061b, 0x061e, 3},
		{0x061f, 0x066a, 75},
		{0x066b, 0x066d, 1},
		{0x06d4, 0x0700, 44},
		{0x0701, 0x070d, 1},
		{0x07f7, 0x07f9, 1},
		{0x0830, 0x083e, 1},
		{0x085e, 0x0964, 262},
		{0x0965, 0x0970, 11},
		{0x09fd, 0x0a76, 121},
		{0x0af0, 0x0c77, 391},
		{0x0c84, 0x0df4, 368},
		{0x0e4f, 0x0e5a, 11},
		{0x0e5b, 0x0f04, 169},
		{0x0f05, 0x0f12, 1},
		{0x0f14, 0x0f3a, 38},
		{0x0f3b, 0x0f3d, 1},
		{0x0f85, 0x0fd0, 75},
		{0x0fd1, 0x0fd4, 1},
		{0x0fd9, 0x0fda, 1},
		{0x104a, 0x104f, 1},
		{0x10fb, 0x1360, 613},
		{0x1361, 0x1368, 1},
		{0x1400, 0x166e, 622},
		{0x169b, 0x169c, 1},
		{0x16eb, 0x16ed, 1},
		{0x1735, 0x1736, 1},
		{0x17d4, 0x17d6, 1},
		{0x17d8, 0x17da, 1},
		{0x1800, 0x180a, 1},
		{0x1944, 0x1945, 1},
		{0x1a1e, 0x1a1f, 1},
		{0x1aa0, 0x1aa6, 1},
		{0x1aa8, 0x1aad, 1},
		{0x1b5a, 0x1b60, 1},
		{0x1bfc, 0x1bff, 1},
		{0x1c3b, 0x1c3f, 1},
		{0x1c7e, 0x1c7f, 1},
		{0x1cc0, 0x1cc7, 1},
		{0x1cd3, 0x2010, 829},
		{0x2011, 0x2027, 1},
		{0x2030, 0x2043, 1},
		{0x2045, 0x2051, 1},
		{0x2053, 0x205e, 1},
		{0x207d, 0x207e, 1},
		{0x208d, 0x208e, 1},
		{0x2308, 0x230b, 1},
		{0x2329, 0x232a, 1},
		{0x2768, 0x2775, 1},
		{0x27c5, 0x27c6, 1},
		{0x27e6, 0x27ef, 1},
		{0x2983, 0x2998, 1},
		{0x29d8, 0x29db, 1},
		{0x29fc, 0x29fd, 1},
		{0x2cf9, 0x2cfc, 1},
		{0x2cfe, 0x2cff, 1},
		{0x2d70, 0x2e00, 144},
		{0x2e01, 0x2e2e, 1},
		{0x2e30, 0x2e4f, 1},
		{0x2e52, 0x3001, 431},
		{0x3002, 0x3003, 1},
		{0x3008, 0x3011, 1},
		{0x3014, 0x301f, 1},
		{0x3030, 0x303d, 13},
		{0x30a0, 0x30fb, 91},
		{0xa4fe, 0xa4ff, 1},
		{0xa60d, 0xa60f, 1},
		{0xa673, 0xa67e, 11},
		{0xa6f2, 0xa6f7, 1},
		{0xa874, 0xa877, 1},
		{0xa8ce, 0xa8cf, 1},
		{0xa8f8, 0xa8fa, 1},
		{0xa8fc, 0xa92e, 50},
		{0xa92f, 0xa95f, 48},
		{0xa9c1, 0xa9cd, 1},
		{0xa9de, 0xa9df, 1},
		{0xaa5c, 0xaa5f, 1},
		{0xaade, 0xaadf, 1},
		{0xaaf0, 0xaaf1, 1},
		{0xabeb, 0xfd3e, 20819},
		{0xfd3f, 0xfe10, 209},
		{0xfe11, 0xfe19, 1},
		{0xfe30, 0xfe52, 1},
		{0xfe54, 0xfe61, 1},
		{0xfe63, 0xfe68, 5},
		{0xfe6a, 0xfe6b, 1},
		{0xff01, 0xff03, 1},
		{0xff05, 0xff0a, 1},
		{0xff0c, 0xff0f, 1},
		{0xff1a, 0xff1b, 1},
		{0xff1f, 0xff20, 1},
		{0xff3b, 0xff3d, 1},
		{0xff3f, 0xff5b, 28},
		{0xff5d, 0xff5f, 2},
		{0xff60, 0xff65, 1},
	},
	R32: []unicodeRange32{
		{0x10100, 0x10102, 1},
		{0x1039f, 0x103d0, 49},
		{0x1056f, 0x10857, 744},
		{0x1091f, 0x1093f, 32},
		{0x10a50, 0x10a58, 1},
		{0x10a7f, 0x10af0, 113},
		{0x10af1, 0x10af6, 1},
		{0x10b39, 0x10b3f, 1},
		{0x10b99, 0x10b9c, 1},
		{0x10ead, 0x10f55, 168},
		{0x10f56, 0x10f59, 1},
		{0x11047, 0x1104d, 1},
		{0x110bb, 0x110bc, 1},
		{0x110be, 0x110c1, 1},
		{0x11140, 0x11143, 1},
		{0x11174, 0x11175, 1},
		{0x111c5, 0x111c8, 1},
		{0x111cd, 0x111db, 14},
		{0x111dd, 0x111df, 1},
		{0x11238, 0x1123d, 1},
		{0x112a9, 0x1144b, 418},
		{0x1144c, 0x1144f, 1},
		{0x1145a, 0x1145b, 1},
		{0x1145d, 0x114c6, 105},
		{0x115c1, 0x115d7, 1},
		{0x11641, 0x11643, 1},
		{0x11660, 0x1166c, 1},
		{0x1173c, 0x1173e, 1},
		{0x1183b, 0x11944, 265},
		{0x11945, 0x11946, 1},
		{0x119e2, 0x11a3f, 93},
		{0x11a40, 0x11a46, 1},
		{0x11a9a, 0x11a9c, 1},
		{0x11a9e, 0x11aa2, 1},
		{0x11c41, 0x11c45, 1},
		{0x11c70, 0x11c71, 1},
		{0x11ef7, 0x11ef8, 1},
		{0x11fff, 0x12470, 1137},
		{0x12471, 0x12474, 1},
		{0x16a6e, 0x16a6f, 1},
		{0x16af5, 0x16b37, 66},
		{0x16b38, 0x16b3b, 1},
		{0x16b44, 0x16e97, 851},
		{0x16e98, 0x16e9a, 1},
		{0x16fe2, 0x1bc9f, 19645},
		{0x1da87, 0x1da8b, 1},
		{0x1e95e, 0x1e95f, 1},
	},
	LatinOffset: 11,
}

var _S = &unicodeRangeTable{
	R16: []unicodeRange16{
		{0x0024, 0x002b, 7},
		{0x003c, 0x003e, 1},
		{0x005e, 0x0060, 2},
		{0x007c, 0x007e, 2},
		{0x00a2, 0x00a6, 1},
		{0x00a8, 0x00a9, 1},
		{0x00ac, 0x00ae, 2},
		{0x00af, 0x00b1, 1},
		{0x00b4, 0x00b8, 4},
		{0x00d7, 0x00f7, 32},
		{0x02c2, 0x02c5, 1},
		{0x02d2, 0x02df, 1},
		{0x02e5, 0x02eb, 1},
		{0x02ed, 0x02ef, 2},
		{0x02f0, 0x02ff, 1},
		{0x0375, 0x0384, 15},
		{0x0385, 0x03f6, 113},
		{0x0482, 0x058d, 267},
		{0x058e, 0x058f, 1},
		{0x0606, 0x0608, 1},
		{0x060b, 0x060e, 3},
		{0x060f, 0x06de, 207},
		{0x06e9, 0x06fd, 20},
		{0x06fe, 0x07f6, 248},
		{0x07fe, 0x07ff, 1},
		{0x09f2, 0x09f3, 1},
		{0x09fa, 0x09fb, 1},
		{0x0af1, 0x0b70, 127},
		{0x0bf3, 0x0bfa, 1},
		{0x0c7f, 0x0d4f, 208},
		{0x0d79, 0x0e3f, 198},
		{0x0f01, 0x0f03, 1},
		{0x0f13, 0x0f15, 2},
		{0x0f16, 0x0f17, 1},
		{0x0f1a, 0x0f1f, 1},
		{0x0f34, 0x0f38, 2},
		{0x0fbe, 0x0fc5, 1},
		{0x0fc7, 0x0fcc, 1},
		{0x0fce, 0x0fcf, 1},
		{0x0fd5, 0x0fd8, 1},
		{0x109e, 0x109f, 1},
		{0x1390, 0x1399, 1},
		{0x166d, 0x17db, 366},
		{0x1940, 0x19de, 158},
		{0x19df, 0x19ff, 1},
		{0x1b61, 0x1b6a, 1},
		{0x1b74, 0x1b7c, 1},
		{0x1fbd, 0x1fbf, 2},
		{0x1fc0, 0x1fc1, 1},
		{0x1fcd, 0x1fcf, 1},
		{0x1fdd, 0x1fdf, 1},
		{0x1fed, 0x1fef, 1},
		{0x1ffd, 0x1ffe, 1},
		{0x2044, 0x2052, 14},
		{0x207a, 0x207c, 1},
		{0x208a, 0x208c, 1},
		{0x20a0, 0x20bf, 1},
		{0x2100, 0x2101, 1},
		{0x2103, 0x2106, 1},
		{0x2108, 0x2109, 1},
		{0x2114, 0x2116, 2},
		{0x2117, 0x2118, 1},
		{0x211e, 0x2123, 1},
		{0x2125, 0x2129, 2},
		{0x212e, 0x213a, 12},
		{0x213b, 0x2140, 5},
		{0x2141, 0x2144, 1},
		{0x214a, 0x214d, 1},
		{0x214f, 0x218a, 59},
		{0x218b, 0x2190, 5},
		{0x2191, 0x2307, 1},
		{0x230c, 0x2328, 1},
		{0x232b, 0x2426, 1},
		{0x2440, 0x244a, 1},
		{0x249c, 0x24e9, 1},
		{0x2500, 0x2767, 1},
		{0x2794, 0x27c4, 1},
		{0x27c7, 0x27e5, 1},
		{0x27f0, 0x2982, 1},
		{0x2999, 0x29d7, 1},
		{0x29dc, 0x29fb, 1},
		{0x29fe, 0x2b73, 1},
		{0x2b76, 0x2b95, 1},
		{0x2b97, 0x2bff, 1},
		{0x2ce5, 0x2cea, 1},
		{0x2e50, 0x2e51, 1},
		{0x2e80, 0x2e99, 1},
		{0x2e9b, 0x2ef3, 1},
		{0x2f00, 0x2fd5, 1},
		{0x2ff0, 0x2ffb, 1},
		{0x3004, 0x3012, 14},
		{0x3013, 0x3020, 13},
		{0x3036, 0x3037, 1},
		{0x303e, 0x303f, 1},
		{0x309b, 0x309c, 1},
		{0x3190, 0x3191, 1},
		{0x3196, 0x319f, 1},
		{0x31c0, 0x31e3, 1},
		{0x3200, 0x321e, 1},
		{0x322a, 0x3247, 1},
		{0x3250, 0x3260, 16},
		{0x3261, 0x327f, 1},
		{0x328a, 0x32b0, 1},
		{0x32c0, 0x33ff, 1},
		{0x4dc0, 0x4dff, 1},
		{0xa490, 0xa4c6, 1},
		{0xa700, 0xa716, 1},
		{0xa720, 0xa721, 1},
		{0xa789, 0xa78a, 1},
		{0xa828, 0xa82b, 1},
		{0xa836, 0xa839, 1},
		{0xaa77, 0xaa79, 1},
		{0xab5b, 0xab6a, 15},
		{0xab6b, 0xfb29, 20414},
		{0xfbb2, 0xfbc1, 1},
		{0xfdfc, 0xfdfd, 1},
		{0xfe62, 0xfe64, 2},
		{0xfe65, 0xfe66, 1},
		{0xfe69, 0xff04, 155},
		{0xff0b, 0xff1c, 17},
		{0xff1d, 0xff1e, 1},
		{0xff3e, 0xff40, 2},
		{0xff5c, 0xff5e, 2},
		{0xffe0, 0xffe6, 1},
		{0xffe8, 0xffee, 1},
		{0xfffc, 0xfffd, 1},
	},
	R32: []unicodeRange32{
		{0x10137, 0x1013f, 1},
		{0x10179, 0x10189, 1},
		{0x1018c, 0x1018e, 1},
		{0x10190, 0x1019c, 1},
		{0x101a0, 0x101d0, 48},
		{0x101d1, 0x101fc, 1},
		{0x10877, 0x10878, 1},
		{0x10ac8, 0x1173f, 3191},
		{0x11fd5, 0x11ff1, 1},
		{0x16b3c, 0x16b3f, 1},
		{0x16b45, 0x1bc9c, 20823},
		{0x1d000, 0x1d0f5, 1},
		{0x1d100, 0x1d126, 1},
		{0x1d129, 0x1d164, 1},
		{0x1d16a, 0x1d16c, 1},
		{0x1d183, 0x1d184, 1},
		{0x1d18c, 0x1d1a9, 1},
		{0x1d1ae, 0x1d1e8, 1},
		{0x1d200, 0x1d241, 1},
		{0x1d245, 0x1d300, 187},
		{0x1d301, 0x1d356, 1},
		{0x1d6c1, 0x1d6db, 26},
		{0x1d6fb, 0x1d715, 26},
		{0x1d735, 0x1d74f, 26},
		{0x1d76f, 0x1d789, 26},
		{0x1d7a9, 0x1d7c3, 26},
		{0x1d800, 0x1d9ff, 1},
		{0x1da37, 0x1da3a, 1},
		{0x1da6d, 0x1da74, 1},
		{0x1da76, 0x1da83, 1},
		{0x1da85, 0x1da86, 1},
		{0x1e14f, 0x1e2ff, 432},
		{0x1ecac, 0x1ecb0, 4},
		{0x1ed2e, 0x1eef0, 450},
		{0x1eef1, 0x1f000, 271},
		{0x1f001, 0x1f02b, 1},
		{0x1f030, 0x1f093, 1},
		{0x1f0a0, 0x1f0ae, 1},
		{0x1f0b1, 0x1f0bf, 1},
		{0x1f0c1, 0x1f0cf, 1},
		{0x1f0d1, 0x1f0f5, 1},
		{0x1f10d, 0x1f1ad, 1},
		{0x1f1e6, 0x1f202, 1},
		{0x1f210, 0x1f23b, 1},
		{0x1f240, 0x1f248, 1},
		{0x1f250, 0x1f251, 1},
		{0x1f260, 0x1f265, 1},
		{0x1f300, 0x1f6d7, 1},
		{0x1f6e0, 0x1f6ec, 1},
		{0x1f6f0, 0x1f6fc, 1},
		{0x1f700, 0x1f773, 1},
		{0x1f780, 0x1f7d8, 1},
		{0x1f7e0, 0x1f7eb, 1},
		{0x1f800, 0x1f80b, 1},
		{0x1f810, 0x1f847, 1},
		{0x1f850, 0x1f859, 1},
		{0x1f860, 0x1f887, 1},
		{0x1f890, 0x1f8ad, 1},
		{0x1f8b0, 0x1f8b1, 1},
		{0x1f900, 0x1f978, 1},
		{0x1f97a, 0x1f9cb, 1},
		{0x1f9cd, 0x1fa53, 1},
		{0x1fa60, 0x1fa6d, 1},
		{0x1fa70, 0x1fa74, 1},
		{0x1fa78, 0x1fa7a, 1},
		{0x1fa80, 0x1fa86, 1},
		{0x1fa90, 0x1faa8, 1},
		{0x1fab0, 0x1fab6, 1},
		{0x1fac0, 0x1fac2, 1},
		{0x1fad0, 0x1fad6, 1},
		{0x1fb00, 0x1fb92, 1},
		{0x1fb94, 0x1fbca, 1},
	},
	LatinOffset: 10,
}
